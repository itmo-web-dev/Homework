//// Задан числовой массив (2, 3, 7, 13, 5, 0, 20)
////найти минимальное и максимальное значения в массивах
//// найти среднее значение элементов массива
//// удалить первый и последний элементы массива



//Минимальное и максимальное значения в массивах
var arr = [2, 3, 7, 13, 5, 0, 20];
var min = arr[0];
var max = arr[0];
for (var i=1; i<arr.length; i++) 
{
if (arr[i]<min) {min = arr[i]}
}
console.log(min)
for (var i=1; i<arr.length; i++) 
 {
if (arr[i]>max) {max = arr[i]}
}
console.log(max)


//Среднее значение массива
var arr = [2, 3, 7, 13, 5, 0, 20];
var summ = 0
for (var i=0; i<arr.length; i++) {
    summ = summ + arr[i];
}
console.log(summ/arr.length)

//удаляем первый и последний элементы массива
var arr = [2, 3, 7, 13, 5, 0, 20];
delete arr[0]
delete arr[arr.length-1]
console.log(arr)

//Создать массив из чисел. Выполнить сортировку массива по возрастанию методом пузырька. Запрещено использовать стандартные методы.
var arr = [3, 28, 7, 13, 5, 0, 20];
var n=arr.length  // длина массива
var k // 
for (k=0; k<=n-1; k++) {
    for (var i=0; i<n; i++){
        if (arr[i+1]<arr[i]) {
            var t = arr[i+1]; arr[i+1]=arr[i]; arr[i]=t;
        }
    }
}
console.log(arr)


//1. Есть три вершины. Координаты X, Y, заданы как целые числа. Нужно определить - является ли треугольник с заданными координатами прямоугольным.
//В решении использовать только математические и логические операторы. Результат в консоль.
//Обязательное условие: все вычисления производить только с целыми числами. Любой переход в дробные числа запрещен!

var x1 = 2
var y1 = 1
var x2 = 4
var y2 = 1
var x3 = 2
var y3 = 5

var ab, bc, ca

ab = (Math.pow((x2-x1),2))+(Math.pow((y2-y1),2)) //квадрат стороны ab
bc = (Math.pow((x3-x2),2))+(Math.pow((y3-y2),2)) //квадрат стороны bc
ca = (Math.pow((x1-x3),2))+(Math.pow((y1-y3),2)) //квадрат стороны ca

console.log(ab)
console.log(bc)
console.log(ca)

if ((ab===bc+ca)||(bc===ab+ca)||(ca===ab+bc)) {
    console.log("треугольник прямоугольный")
} else {
    console.log("треугольник не прямоугольный")
}







