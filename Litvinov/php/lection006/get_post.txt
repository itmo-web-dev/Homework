Url и строка запроса
Запрос пользователя

Например, https://google.com/

или 

https://www.google.ru/?gfe_rd=cr&ei=98AcWfGWLtGCsAGvt6qQDw&gws_rd=ssl#newwindow=1&q=%D0%B2%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B4%D0%B5%D0%B9%D1%81%D1%82%D0%B2%D0%B8%D0%B5+%D1%81+%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B5%D0%BC+php

В URL можно использовать только: 
1. латинские буквы, 
2. цифры
3. некоторые знаки препинания
4. все остальные символы должны быть перекодированы особым образом

Строка запроса – передаваемые на сервер параметры(например id статьи).
Разделитель параметров – знак &

?param_1=value_1&param_2=value_2&param_3=value_3

4. Для чего нужно передавать параметры =>
id форума, товара и тд

5. Запросы на сервер передаются с помощью специальных методов:
GET–получение данных по URL;
POST–отправка данных с помощью HTML-форм

6. Получить данные о запросе, можно с помощию
$link = 'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];

7. Распарсить запрос можно с помощью
parse_url(url)

8. Кодирование Url
-urlencode($url_string)
-rawurlencode ($url_string)

декодировать URL-кодированную строку:
-urldecode($url_string)
-rawurldecode ($url_string)

9.http_build_query() формирует строку запроса, чтобы передать
какие-то параметры(обычно они лежат в массиве: ключ - значение)
Например, $url = 'https://oauth.vk.com/authorize?' . 
          http_build_query (массив с параметрами);

10. Суперглобальный массив $_GET
Например, http://localhost:8000/?id=8924
Из $_GET можно получить все передаваемые параметры,
например, $id = $_GET['id'];

11.Проверку введенных данных нужно делать на клиенте до отправки

Но, даже если уверены, что проверка была, нужно обезопасить себя

Защищаемся от прямых атак: 
1. trim($str) - удаляет пробелы (или другие символы) из начала и конца строки
2. empty($str) - проверка переменной на пустое значение
3. Используйте isset() для проверки введенных пользователем данных
4. Выполняйте переприсвоение данных из суперглобальных массивов 
локальным переменным
5. Можно выполнить очистку суперглобальных массивов

Защищаемся от XSS атак:
1. strip_tags($str) - удаляет HTML и PHP теги из строки
2. htmlspecialchars($str) - преобразует специальные символы в HTML-сущности
3. htmlentities($str) - преобразует все возможные символы в HTML-сущности

Защищаемся от SQL-инъекций:
1.addslashes($str) - экранирует специальные символы в строке, добавляя перед ними обратный слэш
2. mysqli_real_escape_string($str) - экранирует специальные символы в строке для использования в SQL выражении, используя текущий набор символов соединения
3. stripslashes() - удаляет экранирование символов.



Фильтрация данных

PHP имеет мощную встроенную систему фильтрации входных данных.
filter_var(var, filter) - фильтрует переменную с помощью определенного фильтра
filter_var_array(array) - принимает несколько переменных и, при необходимости, фильтрует их
